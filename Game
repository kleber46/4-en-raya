import java.awt.Color;
import java.awt.*;
import java.awt.event.*;
import java.awt.event.*;

import javax.swing.*;


public class Game extends JFrame implements ActionListener {
	JLabel fondo,Lpunt1,Lpunt2,Lpartidas;
	JLabel icono[];
	JLabel marcos[];
	JLabel Turno,iconoturno;
	JButton com1,com2,com3,com4,com5,com6,com7;
	JButton nuevo,salir;
	boolean gano=false;
	String sjug1,sjug2;
	static int contador=0;
	static int punt1=0,punt2=0,part=1;
	static int coordx[][];
	static int coordy[][];
	int valor;
	int colum1[];
	int colum2[];
	int colum3[];
	int colum4[];
	int colum5[];
	int colum6[];
	int colum7[];
	public Game() {
		
		super("JUEGO DE 4 EN RAYA");
		
		setVisible(true);
		setLocation(200,200);
		setSize(800,600);
		//setLayout(null);
		fondo=new JLabel();
		icono=new JLabel[43];
		marcos=new JLabel[5];
		Lpunt1=new JLabel(String.valueOf(punt1));
		Lpunt2=new JLabel(String.valueOf(punt2));
		Lpartidas=new JLabel(String.valueOf(part));
		coordx=new int[8][8];
		coordy=new int[8][8];
		Lpunt1.setBounds(140,15,90,40);
		Lpunt2.setBounds(140,45,90,40);
		Lpartidas.setBounds(140,75,90,40);
		Lpunt1.setForeground(Color.white);
		Lpunt2.setForeground(Color.white);
		Lpartidas.setForeground(Color.white);
		Lpunt1.setFont(new Font("Tahoma",0,25));
		Lpunt2.setFont(new Font("Tahoma",0,25));
		Lpartidas.setFont(new Font("Tahoma",0,25));
		fondo.setIcon(new ImageIcon("fondo.jpg"));
		for(int i=1;i<=42;i++)
		{
			icono[i]=new JLabel();
			icono[i].setIcon(new ImageIcon("dulce1.png"));
			icono[i].setVisible(false);
			fondo.add(icono[i]);		
		}
		Turno=new JLabel();
		iconoturno=new JLabel();
		iconoturno.setIcon(new ImageIcon("dulce1.png"));
		com1=new JButton();
		com2=new JButton();
		com3=new JButton();
		com4=new JButton();
		com5=new JButton();
		com6=new JButton();
		com7=new JButton();
		
		com1.setIcon(new ImageIcon("flecha.png"));
		com2.setIcon(new ImageIcon("flecha.png"));
		com3.setIcon(new ImageIcon("flecha.png"));
		com4.setIcon(new ImageIcon("flecha.png"));
		com5.setIcon(new ImageIcon("flecha.png"));
		com6.setIcon(new ImageIcon("flecha.png"));
		com7.setIcon(new ImageIcon("flecha.png"));
//setResizable(false);
		com1.setBounds(235,50,70,70);
		com1.addActionListener(this);
		com2.setBounds(315,50,70,70);
		com2.addActionListener(this);
		com3.setBounds(395,50,70,70);
		com3.addActionListener(this);
		com4.setBounds(475,50,70,70);
		com4.addActionListener(this);
		com5.setBounds(555,50,70,70);
		com5.addActionListener(this);
		com6.setBounds(635,50,70,70);
		com6.addActionListener(this);
		com7.setBounds(715,50,70,70);
		com7.addActionListener(this);
		iniciar();
		coordenadas();
		fondo.add(com1);
		fondo.add(com2);
		fondo.add(com3);
		fondo.add(com4);
		fondo.add(com5);
		fondo.add(com6);
		fondo.add(com7);
		fondo.add(Lpunt1);
		fondo.add(Lpunt2);
		sjug1=Menu.jug1.getText();
		sjug2=Menu.jug2.getText();
		Turno.setText(sjug1);
		iconoturno.setIcon(new ImageIcon("dulce1.png"));
		Turno.setBounds(110,280,200,50);
		Turno.setForeground(Color.white);
		Turno.setFont(new Font("Tahoma",0,15));
		
		iconoturno.setBounds(130 ,330, 60, 60);
		fondo.add(Turno);
		fondo.add(iconoturno);
		
		nuevo=new JButton("NUEVO JUEGO");
		salir=new JButton("SALIR");
		nuevo.setForeground(Color.darkGray);
		nuevo.setBounds(230,10,120,30);
		salir.setBounds(420,10,120,30);
		nuevo.addActionListener(this);
		salir.addActionListener(this);
		fondo.add(nuevo);
		fondo.add(salir);
		fondo.add(Lpartidas);
		this.add(fondo);
		if(contador%2==0)
			display(2);
		if(contador%2==1)
			display(1);
		
		pack();
		
	
	}
	public void iniciarmarco()
	{
		
		for(int i=1;i<=4;i++)
		{
			marcos[i]=new JLabel();
			marcos[i].setIcon(new ImageIcon("marco.png"));
		}
		
		
	}
	public void coordenadas()
	{
		int cont=1;
		int valor=235;
		//asigno coordenadas para la X
		for(int i=1;i<=7;i++)
		{
			switch(i)
			{
			case 2:
				valor=320;
				break;
			case 3:
				valor=400;
				break;
			case 4:
				valor=475;
				break;
			case 5:
				valor=560;
				break;
			case 6:
				valor=635;
				break;
			case 7:
				valor=720;
				break;
				
			}
			for(int j=1;j<=6;j++)
			{
				coordx[i][j]=valor;
			}
					
			
		}	
		//ASIGNO COORDENADAS PARA LA Y
		valor=150;
		for(int i=1;i<=7;i++)
		{
			
			for(int j=1;j<=6;j++)
			{
				switch(j)
				{
				case 1:
					valor=150;
					break;
				case 2:
					valor=225;
					break;
				case 3:
					valor=305;
					break;
				case 4:
					valor=375;
					break;
				case 5:
					valor=445;
					break;
				case 6:
					valor=525;
					break;
					
				
				
				}
				coordy[i][j]=valor;
				
			}
		}
		
	}
	public void iniciar()
	{
		colum1=new int[7];
		colum2=new int[7];
		colum3=new int[7];
		colum4=new int[7];
		colum5=new int[7];
		colum6=new int[7];
		colum7=new int[7];
		
		for(int i=1;i<=6;i++)
		{
			colum1[i]=0;
			colum2[i]=0;
			colum3[i]=0;
			colum4[i]=0;
			colum5[i]=0;
			colum6[i]=0;
			colum7[i]=0;
		}
		
	}
	public void display(int val)
	{
		if(val==2)
		{
			Turno.setText(sjug1);
			iconoturno.setIcon(new ImageIcon("dulce1.png"));
		}
		if(val==1)
		{
			Turno.setText(sjug2);
			iconoturno.setIcon(new ImageIcon("dulce2.png"));
		}
	}
	
	public void animacion(int i,int col,int val)
	{
		
		String ruta;
		ruta=new String();
		if(val==1)
		{
			ruta="dulce1.png";
		}
		if(val==2)
		{
			ruta="dulce2.png";
		}
	
		switch(col)
		{
		case 1:
			//*********************** PRIMERA COLUMNA **************************
			colum1[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[2].setVisible(true);
					icono[2].setIcon(new ImageIcon(ruta));
					icono[2].setBounds(235,230,50,50);
					
					break;
				case 3:
					icono[3].setVisible(true);
					icono[3].setIcon(new ImageIcon(ruta));
					icono[3].setBounds(235,310,50,50);
					
					break;
				case 4:
					icono[4].setVisible(true);
					icono[4].setIcon(new ImageIcon(ruta));
					icono[4].setBounds(235,380,50,50);
					
					break;
				case 5:
					icono[5].setVisible(true);
					icono[5].setIcon(new ImageIcon(ruta));
					icono[5].setBounds(235,450,50,50);
					
					break;
				case 6:
					icono[6].setVisible(true);
					icono[6].setIcon(new ImageIcon(ruta));
					icono[6].setBounds(235,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[1].setVisible(true);
				icono[1].setIcon(new ImageIcon(ruta));
				icono[1].setBounds(235,150,50,50);
			}
			
			break;
		case 2://******************************** SEGUNDA COLUMNA **************
			colum2[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[8].setVisible(true);
					icono[8].setIcon(new ImageIcon(ruta));
					icono[8].setBounds(320,230,50,50);
					
					break;
				case 3:
					icono[9].setVisible(true);
					icono[9].setIcon(new ImageIcon(ruta));
					icono[9].setBounds(320,310,50,50);
					
					break;
				case 4:
					icono[10].setVisible(true);
					icono[10].setIcon(new ImageIcon(ruta));
					icono[10].setBounds(320,380,50,50);
					
					break;
				case 5:
					icono[11].setVisible(true);
					icono[11].setIcon(new ImageIcon(ruta));
					icono[11].setBounds(320,450,50,50);
					
					break;
				case 6:
					icono[12].setVisible(true);
					icono[12].setIcon(new ImageIcon(ruta));
					icono[12].setBounds(320,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[7].setVisible(true);
				icono[7].setIcon(new ImageIcon(ruta));
				icono[7].setBounds(320,150,50,50);
			}
			break;
			
			
		case 3:
			//*********************** TERCERA COLUMNA *****************************
			colum3[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[14].setVisible(true);
					icono[14].setIcon(new ImageIcon(ruta));
					icono[14].setBounds(400,230,50,50);
					
					break;
				case 3:
					icono[15].setVisible(true);
					icono[15].setIcon(new ImageIcon(ruta));
					icono[15].setBounds(400,310,50,50);
					
					break;
				case 4:
					icono[16].setVisible(true);
					icono[16].setIcon(new ImageIcon(ruta));
					icono[16].setBounds(400,380,50,50);
					
					break;
				case 5:
					icono[17].setVisible(true);
					icono[17].setIcon(new ImageIcon(ruta));
					icono[17].setBounds(400,450,50,50);
					
					break;
				case 6:
					icono[18].setVisible(true);
					icono[18].setIcon(new ImageIcon(ruta));
					icono[18].setBounds(400,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[13].setVisible(true);
				icono[13].setIcon(new ImageIcon(ruta));
				icono[13].setBounds(400,150,50,50);
			}
			
			
			
			break;
			
		case 4:
			// ************************ COLUMNA 4 ****************************
			colum4[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[20].setVisible(true);
					icono[20].setIcon(new ImageIcon(ruta));
					icono[20].setBounds(475,230,50,50);
					
					break;
				case 3:
					icono[21].setVisible(true);
					icono[21].setIcon(new ImageIcon(ruta));
					icono[21].setBounds(475,310,50,50);
					
					break;
				case 4:
					icono[22].setVisible(true);
					icono[22].setIcon(new ImageIcon(ruta));
					icono[22].setBounds(475,380,50,50);
					
					break;
				case 5:
					icono[23].setVisible(true);
					icono[23].setIcon(new ImageIcon(ruta));
					icono[23].setBounds(475,450,50,50);
					
					break;
				case 6:
					icono[24].setVisible(true);
					icono[24].setIcon(new ImageIcon(ruta));
					icono[24].setBounds(475,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[19].setVisible(true);
				icono[19].setIcon(new ImageIcon(ruta));
				icono[19].setBounds(475,150,50,50);
			}
			
			break;
			
		case 5:
			//********************* COLUMNA 5 *************************************
			colum5[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[26].setVisible(true);
					icono[26].setIcon(new ImageIcon(ruta));
					icono[26].setBounds(560,230,50,50);
					
					break;
				case 3:
					icono[27].setVisible(true);
					icono[27].setIcon(new ImageIcon(ruta));
					icono[27].setBounds(560,310,50,50);
					
					break;
				case 4:
					icono[28].setVisible(true);
					icono[28].setIcon(new ImageIcon(ruta));
					icono[28].setBounds(560,380,50,50);
					
					break;
				case 5:
					icono[29].setVisible(true);
					icono[29].setIcon(new ImageIcon(ruta));
					icono[29].setBounds(560,450,50,50);
					
					break;
				case 6:
					icono[30].setVisible(true);
					icono[30].setIcon(new ImageIcon(ruta));
					icono[30].setBounds(560,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[25].setVisible(true);
				icono[25].setIcon(new ImageIcon(ruta));
				icono[25].setBounds(560,150,50,50);
			}
			
			
			
			
			break;
			
		case 6:
			// **************************** COLUMNA 6 ************************
			colum6[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[32].setVisible(true);
					icono[32].setIcon(new ImageIcon(ruta));
					icono[32].setBounds(635,230,50,50);
					
					break;
				case 3:
					icono[33].setVisible(true);
					icono[33].setIcon(new ImageIcon(ruta));
					icono[33].setBounds(635,310,50,50);
					
					break;
				case 4:
					icono[34].setVisible(true);
					icono[34].setIcon(new ImageIcon(ruta));
					icono[34].setBounds(635,380,50,50);
					
					break;
				case 5:
					icono[35].setVisible(true);
					icono[35].setIcon(new ImageIcon(ruta));
					icono[35].setBounds(635,450,50,50);
					
					break;
				case 6:
					icono[36].setVisible(true);
					icono[36].setIcon(new ImageIcon(ruta));
					icono[36].setBounds(635,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[31].setVisible(true);
				icono[31].setIcon(new ImageIcon(ruta));
				icono[31].setBounds(635,150,50,50);
			}
			
			
			
			break;
			
		case 7:
			//******************** COLUMNA 7 ***********************************
			colum7[i]=val;
			if(i>1)
			{
				switch(i)
				{
				case 2:
					icono[38].setVisible(true);
					icono[38].setIcon(new ImageIcon(ruta));
					icono[38].setBounds(720,230,50,50);
					
					break;
				case 3:
					icono[39].setVisible(true);
					icono[39].setIcon(new ImageIcon(ruta));
					icono[39].setBounds(720,310,50,50);
					
					break;
				case 4:
					icono[40].setVisible(true);
					icono[40].setIcon(new ImageIcon(ruta));
					icono[40].setBounds(720,380,50,50);
					
					break;
				case 5:
					icono[41].setVisible(true);
					icono[41].setIcon(new ImageIcon(ruta));
					icono[41].setBounds(720,450,50,50);
					
					break;
				case 6:
					icono[42].setVisible(true);
					icono[42].setIcon(new ImageIcon(ruta));
					icono[42].setBounds(720,530,50,50);
					
					break;
				}
				
				
			}
			if(i==1)
			{
				icono[37].setVisible(true);
				icono[37].setIcon(new ImageIcon(ruta));
				icono[37].setBounds(720,150,50,50);
			}
			
			
			
			
			
			break;
			
		}
	}
	public void verificacion(int i,int col,int val)
	{
		
		
		if(col==1)
		{
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum1[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[1][i],coordy[1][i+1],60,60);
					marcos[3].setBounds(coordx[1][i],coordy[1][i+2],60,60);
					marcos[4].setBounds(coordx[1][i],coordy[1][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
						marcos[2].setBounds(coordx[1][i],coordy[1][i+1],60,60);
						marcos[3].setBounds(coordx[1][i],coordy[1][i+2],60,60);
						marcos[4].setBounds(coordx[1][i],coordy[1][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
					if(gano==false)
					{
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
					}
					}
					if(gano==false)
					{
					part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
			}
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum1[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[1][i],coordy[1][i-1],60,60);
					marcos[3].setBounds(coordx[1][i],coordy[1][i-2],60,60);
					marcos[4].setBounds(coordx[1][i],coordy[1][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
						marcos[2].setBounds(coordx[1][i],coordy[1][i-1],60,60);
						marcos[3].setBounds(coordx[1][i],coordy[1][i-2],60,60);
						marcos[4].setBounds(coordx[1][i],coordy[1][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			int cont=0;
			
		if(colum2[i]==val)
			cont++;
		if(colum3[i]==val)
			cont++;
		if(colum4[i]==val)
			cont++;
		
		if(cont==3)
		{
			if(val==1)
			{
			iniciarmarco();
			marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
			marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
			marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
			marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
			for(int h=1;h<=4;h++)
				fondo.add(marcos[h]);
			if(gano==false)
			{	
			JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
			punt1++;
			}
			
			}
			if(val==2)
			{
				
				iniciarmarco();
				marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
				marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);	
				if(gano==false)
				{	
			JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
			punt2++;
				}
			
			}
			
			
			if(gano==false)
			{
			part++;
			this.hide();
			new Game();
			gano=true;
			}
		}
		if(i<=3)
		{
			int cont2=0;
			if(colum2[i+1]==val)
				cont2++;
			if(colum3[i+2]==val)
				cont2++;
			if(colum4[i+3]==val)
				cont2++;
			if(cont2==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
				marcos[2].setBounds(coordx[2][i],coordy[2][i+1],60,60);
				marcos[3].setBounds(coordx[3][i],coordy[3][i+2],60,60);
				marcos[4].setBounds(coordx[4][i],coordy[4][i+3],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i+1],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i+2],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
					
					}
				
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
		}
		
		if(i>3)
		{
			int cont3=0;
			if(colum2[i-1]==val)
				cont3++;
			if(colum3[i-2]==val)
				cont3++;
			if(colum4[i-3]==val)
				cont3++;
			if(cont3==3)
			{
			
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
				marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
				marcos[3].setBounds(coordx[3][i],coordy[3][i-2],60,60);
				marcos[4].setBounds(coordx[4][i],coordy[4][i-3],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i-2],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
				
				
				
				
			}
		}
		
	
			
		}
		
	//ANALISIS DE LA COLUMNA NUMERO 2	
		if(col==2)
		{
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum2[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i+1],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i+2],60,60);
					marcos[3].setBounds(coordx[2][i],coordy[2][i+3],60,60);
					marcos[4].setBounds(coordx[2][i],coordy[2][i+4],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i+1],60,60);
						marcos[2].setBounds(coordx[2][i],coordy[1][i+2],60,60);
						marcos[3].setBounds(coordx[2][i],coordy[2][i+3],60,60);
						marcos[4].setBounds(coordx[2][i],coordy[2][i+4],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum2[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
					marcos[3].setBounds(coordx[2][i],coordy[2][i-2],60,60);
					marcos[4].setBounds(coordx[2][i],coordy[2][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
						marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
						marcos[3].setBounds(coordx[2][i],coordy[2][i-2],60,60);
						marcos[4].setBounds(coordx[2][i],coordy[2][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
					
					
					
				}
			}
			
			int cont=0;
			if(colum3[i]==val)
			cont++;
			if(colum4[i]==val)
			cont++;
			if(colum5[i]==val)
			cont++;
			
			if(cont==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
			
			if(i<=3)
			{
				int cont2=0;
				if(colum3[i+1]==val)
					cont2++;
				if(colum4[i+2]==val)
					cont2++;
				if(colum5[i+3]==val)
					cont2++;
				if(cont2==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i+1],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i+2],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i+1],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i+2],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					
					
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i>3)
			{
				int cont3=0;
				if(colum3[i-1]==val)
					cont3++;
				if(colum4[i-2]==val)
					cont3++;
				if(colum5[i-3]==val)
					cont3++;
				if(cont3==3)
				{
				
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i-2],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i-2],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			
			int cont5=0;
			if(colum1[i]==val)
				cont5++;
			if(colum3[i]==val)
				cont5++;
			if(colum4[i]==val)
				cont5++;
			
			if(cont5==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
				marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
			
			if(i>=2 && i<=4)
			{
				
				int contk=0;
				
				if(colum1[i-1]==val)
				contk++;
				if(colum3[i+1]==val)
				contk++;
				if(colum4[i+2]==val)
				contk++;
					
				if(contk==3)
				{
					
					
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i-1],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i+1],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i+2],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[1][i],coordy[1][i-1],60,60);
						marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
						marcos[3].setBounds(coordx[3][i],coordy[3][i+1],60,60);
						marcos[4].setBounds(coordx[4][i],coordy[4][i+2],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
				
				
				
			}
				
			
			
		}
		//ANALISIS DE LA COLUMNA 3
		if(col==3)
		{
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum3[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i+1],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i+2],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i+3],60,60);
					marcos[4].setBounds(coordx[3][i],coordy[3][i+4],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i+1],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i+2],60,60);
						marcos[3].setBounds(coordx[3][i],coordy[3][i+3],60,60);
						marcos[4].setBounds(coordx[3][i],coordy[3][i+4],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum3[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i-2],60,60);
					marcos[4].setBounds(coordx[3][i],coordy[3][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
						marcos[3].setBounds(coordx[3][i],coordy[3][i-2],60,60);
						marcos[4].setBounds(coordx[3][i],coordy[3][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
			}
			int cont=0;
			if(colum4[i]==val)
				cont++;
			if(colum5[i]==val)
				cont++;
			if(colum6[i]==val)
			cont++;
			if(cont==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
				
			}
			
			if(i<=3)
			{
				int cont2=0;
				if(colum4[i+1]==val)
					cont2++;
				if(colum5[i+2]==val)
					cont2++;
				if(colum6[i+3]==val)
					cont2++;
				if(cont2==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i+1],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i+2],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i+1],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i+2],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
			}
			
			if(i>3)
			{
				int cont3=0;
				if(colum4[i-1]==val)
					cont3++;
				if(colum5[i-2]==val)
					cont3++;
				if(colum6[i-3]==val)
					cont3++;
				if(cont3==3)
				{
				
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i-1],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i-2],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
				}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i-1],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i-2],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
						
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
			}
			
			
			int cont5=0;
			if(colum2[i]==val)
				cont5++;
			if(colum4[i]==val)
				cont5++;
			if(colum5[i]==val)
				cont5++;
			
			if(cont5==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				
				if(gano==false)
				{
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
					
				}
				
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
				
				
			}
				
				
				
			int cont6=0;
			if(colum1[i]==val)
				cont6++;
			if(colum2[i]==val)
				cont6++;
			if(colum4[i]==val)
				cont6++;
			
			if(cont6==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
				marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
					
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				
				}
				
				
			}
			
			
			if(i>=2 && i<=4)
			{
				int contk = 0;
				
				
					
					if(colum2[i-1]==val)
						contk++;
					if(colum4[i+1]==val)
						contk++;
					if(colum5[i+2]==val)
						contk++;
					if(contk==3)
					{
						
						if(val==1)
						{
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i-1],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i+1],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i+2],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);
						if(gano==false)
						{	
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
						punt1++;
						}
						
						}
						if(val==2)
						{
							
							iniciarmarco();
							marcos[1].setBounds(coordx[2][i],coordy[2][i-1],60,60);
							marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
							marcos[3].setBounds(coordx[4][i],coordy[4][i+1],60,60);
							marcos[4].setBounds(coordx[5][i],coordy[5][i+2],60,60);
							for(int h=1;h<=4;h++)
								fondo.add(marcos[h]);	
							if(gano==false)
							{	
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
						punt2++;
							}
							
						}
						if(gano==false)
						{
							part++;
						this.hide();
						new Game();
						gano=true;
						
						}
						
						
						
					}
					
				if(i==3 || i==4)
				{
				int contt=0;
					if(colum1[i-2]==val)
						contt++;
					if(colum2[i-1]==val)
						contt++;
					if(colum4[i+1]==val)
						contt++;
					
					if(contt==3)
					{
						
						if(val==1)
						{
						iniciarmarco();
						marcos[1].setBounds(coordx[1][i],coordy[1][i-2],60,60);
						marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
						marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[4].setBounds(coordx[4][i],coordy[4][i+1],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);
						if(gano==false)
						{	
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
						punt1++;
						}
						
						}
						if(val==2)
						{
							
							iniciarmarco();
							marcos[1].setBounds(coordx[1][i],coordy[1][i-2],60,60);
							marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
							marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
							marcos[4].setBounds(coordx[4][i],coordy[4][i+1],60,60);
							for(int h=1;h<=4;h++)
								fondo.add(marcos[h]);	
							if(gano==false)
							{	
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
						punt2++;
							}
							
						}
						if(gano==false)
						{
							part++;
						this.hide();
						new Game();
						gano=true;
						
						}
						
						
					}
					
				
				
				}
					
				
				
				
				
				
				
			}
			
			
			if(i==5)
			{
				
				int contt=0;
				if(colum1[i-2]==val)
					contt++;
				if(colum2[i-1]==val)
					contt++;
				if(colum4[i+1]==val)
					contt++;
				
				if(contt==3)
				{
					
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i-2],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i+1],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[1][i],coordy[1][i-2],60,60);
						marcos[2].setBounds(coordx[2][i],coordy[2][i-1],60,60);
						marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[4].setBounds(coordx[4][i],coordy[4][i+1],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
						
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					
					}
				
				}
			
			}
			
			
			
			
			
			
		}
		// ******************** ANALISIS DE LA COLUMNA 4 *******************
		if(col==4)
		{
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum4[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i+1],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i+2],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i+3],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i+4],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					
					if(gano==false)
					{
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[4][i],coordy[4][i+1],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i+2],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i+3],60,60);
						marcos[4].setBounds(coordx[4][i],coordy[4][i+4],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
			}
			
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum4[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i-1],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i-2],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i-1],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i-2],60,60);
						marcos[4].setBounds(coordx[4][i],coordy[4][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			int cont=0;
			if(colum5[i]==val)
				cont++;
			if(colum6[i]==val)
				cont++;
			if(colum7[i]==val)
			cont++;
			
			if(cont==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
				marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);														
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
					
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
				
				
			}
			
			
			
			if(i<=3)
			{
				int cont2=0;
				if(colum5[i+1]==val)
					cont2++;
				if(colum6[i+2]==val)
					cont2++;
				if(colum7[i+3]==val)
					cont2++;
				if(cont2==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i+1],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i+2],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[2].setBounds(coordx[5][i],coordy[5][i+1],60,60);
						marcos[3].setBounds(coordx[6][i],coordy[6][i+2],60,60);
						marcos[4].setBounds(coordx[7][i],coordy[7][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
						
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
					
				}
				
				int cont3=0;
				if(colum3[i+1]==val)
					cont3++;
				if(colum2[i+2]==val)
					cont3++;
				if(colum1[i+3]==val)
					cont3++;
				if(cont3==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i+1],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i+2],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					
					if(gano==false)
					{
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
						marcos[2].setBounds(coordx[2][i],coordy[2][i+1],60,60);
						marcos[3].setBounds(coordx[3][i],coordy[3][i+2],60,60);
						marcos[4].setBounds(coordx[4][i],coordy[4][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
				
			}
			
			if(i>3)
			{
				int cont3=0;
				if(colum5[i-1]==val)
					cont3++;
				if(colum6[i-2]==val)
					cont3++;
				if(colum7[i-3]==val)
					cont3++;
				if(cont3==3)
				{
				
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i-1],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i-2],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[2].setBounds(coordx[5][i],coordy[5][i-1],60,60);
						marcos[3].setBounds(coordx[6][i],coordy[6][i-2],60,60);
						marcos[4].setBounds(coordx[7][i],coordy[7][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			int cont4=0;
			if(colum3[i]==val)
				cont4++;
			if(colum2[i]==val)
				cont4++;
			if(colum1[i]==val)
				cont4++;
			if(cont4==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
				marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[1][i],coordy[1][i],60,60);
					marcos[2].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[3].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[4].setBounds(coordx[4][i],coordy[4][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
				
			}
			
			
			
			int cont5=0;
			if(colum3[i]==val)
				cont5++;
			if(colum5[i]==val)
				cont5++;
			if(colum6[i]==val)
				cont5++;
			
			if(cont5==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
				
			}
				
			
			
			int cont6=0;
			if(colum2[i]==val)
				cont6++;
			if(colum3[i]==val)
				cont6++;
			if(colum5[i]==val)
				cont6++;
			
			if(cont6==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				
				if(gano==false)
				{
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
			
			
			
			
			if(i>=2 && i<=4)
			{
				int contk = 0;
				
				
					
					if(colum3[i-1]==val)
						contk++;
					if(colum5[i+1]==val)
						contk++;
					if(colum6[i+2]==val)
						contk++;
					if(contk==3)
					{
						
						if(val==1)
						{
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i-1],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i+1],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i+2],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);
						if(gano==false)
						{	
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
						punt1++;
						}
						
						}
						if(val==2)
						{
							
							iniciarmarco();
							marcos[1].setBounds(coordx[3][i],coordy[3][i-1],60,60);
							marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
							marcos[3].setBounds(coordx[5][i],coordy[5][i+1],60,60);
							marcos[4].setBounds(coordx[6][i],coordy[6][i+2],60,60);
							for(int h=1;h<=4;h++)
								fondo.add(marcos[h]);	
							if(gano==false)
							{	
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
						punt2++;
							}
							
						}
						if(gano==false)
						{
							part++;
						this.hide();
						new Game();
						gano=true;
						
						}
						
						
						
					}
					
				if(i==3 || i==4)
				{
				int contt=0;
					if(colum2[i-2]==val)
						contt++;
					if(colum3[i-1]==val)
						contt++;
					if(colum5[i+1]==val)
						contt++;
					
					if(contt==3)
					{
						
						if(val==1)
						{
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i-2],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i+1],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);
						if(gano==false)
						{	
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
						punt1++;
						}
						
						}
						if(val==2)
						{
							
							iniciarmarco();
							marcos[1].setBounds(coordx[2][i],coordy[2][i-2],60,60);
							marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
							marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
							marcos[4].setBounds(coordx[5][i],coordy[5][i+1],60,60);
							for(int h=1;h<=4;h++)
								fondo.add(marcos[h]);	
							if(gano==false)
							{	
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
						punt2++;
							}
							
						}
						if(gano==false)
						{
							part++;
						this.hide();
						new Game();
						gano=true;
						
						}
						
						
					}
					
				
				
				}
					
				
				
				
				
				
				
			}
			
			
			if(i==5)
			{
				
				int contt=0;
				if(colum2[i-2]==val)
					contt++;
				if(colum3[i-1]==val)
					contt++;
				if(colum5[i+1]==val)
					contt++;
				
				if(contt==3)
				{
					
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i-2],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i+1],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i-2],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i-1],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i+1],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
						
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					
					}
				
				}
			
			}
			
			
			
				
			
			
			
			
		}
		// ********** * ANALISIS DE LA COLUMNA 5 * ******************************
		if(col==5)
		{
			
			
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum5[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[5][i],coordy[5][i+1],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i+2],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i+3],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i+4],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[5][i],coordy[5][i+1],60,60);
						marcos[2].setBounds(coordx[5][i],coordy[5][i+2],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i+3],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i+4],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum5[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i-1],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i-2],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[5][i],coordy[5][i],60,60);
						marcos[2].setBounds(coordx[5][i],coordy[5][i-1],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i-2],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i<=3)
			{
				int cont3=0;
				if(colum4[i+1]==val)
					cont3++;
				if(colum3[i+2]==val)
					cont3++;
				if(colum2[i+3]==val)
					cont3++;
				if(cont3==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i+1],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i+2],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					
					if(gano==false)
					{
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
						marcos[2].setBounds(coordx[3][i],coordy[3][i+1],60,60);
						marcos[3].setBounds(coordx[4][i],coordy[4][i+2],60,60);
						marcos[4].setBounds(coordx[5][i],coordy[5][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
				
				
			}
			
			int cont4=0;
			if(colum4[i]==val)
				cont4++;
			if(colum3[i]==val)
				cont4++;
			if(colum2[i]==val)
				cont4++;
			if(cont4==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
				marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[2][i],coordy[2][i],60,60);
					marcos[2].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[3].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[4].setBounds(coordx[5][i],coordy[5][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
			
			
			
			int cont5=0;
			if(colum4[i]==val)
				cont5++;
			if(colum6[i]==val)
				cont5++;
			if(colum7[i]==val)
				cont5++;
			
			if(cont5==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
				marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
				
			
			
			
			
			int cont6=0;
			if(colum3[i]==val)
				cont6++;
			if(colum4[i]==val)
				cont6++;
			if(colum6[i]==val)
				cont6++;
			
			if(cont6==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
				
			
			
			if(i>=2 && i<=5)
			{
				int contk = 0;
				
				
				if(i!=5)
				{
					if(colum4[i-1]==val)
						contk++;
					if(colum6[i+1]==val)
						contk++;
					if(colum7[i+2]==val)
						contk++;
					if(contk==3)
					{
						
						if(val==1)
						{
						iniciarmarco();
						marcos[1].setBounds(coordx[4][i],coordy[4][i-1],60,60);
						marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
						marcos[3].setBounds(coordx[6][i],coordy[6][i+1],60,60);
						marcos[4].setBounds(coordx[7][i],coordy[7][i+2],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);
						if(gano==false)
						{	
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
						punt1++;
						}
						
						}
						if(val==2)
						{
							
							iniciarmarco();
							marcos[1].setBounds(coordx[4][i],coordy[4][i-1],60,60);
							marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
							marcos[3].setBounds(coordx[6][i],coordy[6][i+1],60,60);
							marcos[4].setBounds(coordx[7][i],coordy[7][i+2],60,60);
							for(int h=1;h<=4;h++)
								fondo.add(marcos[h]);	
							if(gano==false)
							{	
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
						punt2++;
							}
							
						}
						if(gano==false)
						{
							part++;
						this.hide();
						new Game();
						gano=true;
						
						}
						
						
						
					}
				}
					
				if(i==3 || i==4 || i==5)
				{
				int contt=0;
					if(colum3[i-2]==val)
						contt++;
					if(colum4[i-1]==val)
						contt++;
					if(colum6[i+1]==val)
						contt++;
					
					if(contt==3)
					{
						
						if(val==1)
						{
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i-2],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i-1],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i+1],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);
						if(gano==false)
						{	
						JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
						punt1++;
						}
						
						}
						if(val==2)
						{
							
							iniciarmarco();
							marcos[1].setBounds(coordx[3][i],coordy[3][i-2],60,60);
							marcos[2].setBounds(coordx[4][i],coordy[4][i-1],60,60);
							marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
							marcos[4].setBounds(coordx[6][i],coordy[6][i+1],60,60);
							for(int h=1;h<=4;h++)
								fondo.add(marcos[h]);	
							if(gano==false)
							{	
						JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
						punt2++;
							}
							
						}
						if(gano==false)
						{
							part++;
						this.hide();
						new Game();
						gano=true;
						
						}
						
						
					}
				}
					
			}
			
			
			
			
			
			
			
			
			
			
			
			
			
		}
		// ANALISIS DE LA COLUMNA 6
		if(col==6)
		{
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum6[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[6][i],coordy[6][i+1],60,60);
					marcos[2].setBounds(coordx[6][i],coordy[6][i+2],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i+3],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i+4],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[6][i],coordy[6][i+1],60,60);
						marcos[2].setBounds(coordx[6][i],coordy[6][i+2],60,60);
						marcos[3].setBounds(coordx[6][i],coordy[6][i+3],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i+4],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					
					
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum6[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[6][i],coordy[6][i],60,60);
					marcos[2].setBounds(coordx[6][i],coordy[6][i-1],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i-2],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[6][i],coordy[6][i],60,60);
						marcos[2].setBounds(coordx[6][i],coordy[6][i-1],60,60);
						marcos[3].setBounds(coordx[6][i],coordy[6][i-2],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++; 
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i<=3)
			{
				int cont3=0;
				if(colum5[i+1]==val)
					cont3++;
				if(colum4[i+2]==val)
					cont3++;
				if(colum3[i+3]==val)
					cont3++;
				if(cont3==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i+1],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i+2],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
						marcos[2].setBounds(coordx[4][i],coordy[4][i+1],60,60);
						marcos[3].setBounds(coordx[5][i],coordy[5][i+2],60,60);
						marcos[4].setBounds(coordx[6][i],coordy[6][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
				
				
			}
			
			int cont4=0;
			if(colum5[i]==val)
				cont4++;
			if(colum4[i]==val)
				cont4++;
			if(colum3[i]==val)
				cont4++;
			if(cont4==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
				marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[3][i],coordy[3][i],60,60);
					marcos[2].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[3].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[4].setBounds(coordx[6][i],coordy[6][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
					
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
			
			
			int cont5=0;
			if(colum4[i]==val)
				cont5++;
			if(colum5[i]==val)
				cont5++;
			if(colum7[i]==val)
				cont5++;
			
			if(cont5==3)
			{
				
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
				marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
				
			
			
			
			
			
			
		}
		if(col==7)
		{
			if(i<=3)
			{
				int cont=0;
				for(int j=i+1;j<=i+3;j++)
				{
					if(colum7[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[7][i],coordy[7][i+1],60,60);
					marcos[2].setBounds(coordx[7][i],coordy[7][i+2],60,60);
					marcos[3].setBounds(coordx[7][i],coordy[7][i+3],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i+4],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[7][i],coordy[7][i+1],60,60);
						marcos[2].setBounds(coordx[7][i],coordy[7][i+2],60,60);
						marcos[3].setBounds(coordx[7][i],coordy[7][i+3],60,60);
						marcos[4].setBounds(coordx[7][i],coordy[7][i+4],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i>=4)
			{
				int cont=0;
				for(int j=i-3;j<=i-1;j++)
				{
					if(colum7[j]==val)
					{
						cont++;
					}
				}
				
				if(cont==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[7][i],coordy[7][i],60,60);
					marcos[2].setBounds(coordx[7][i],coordy[7][i-1],60,60);
					marcos[3].setBounds(coordx[7][i],coordy[7][i-2],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i-3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[7][i],coordy[7][i],60,60);
						marcos[2].setBounds(coordx[7][i],coordy[7][i-1],60,60);
						marcos[3].setBounds(coordx[7][i],coordy[7][i-2],60,60);
						marcos[4].setBounds(coordx[7][i],coordy[7][i-3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
			}
			
			if(i<=3)
			{
				int cont3=0;
				if(colum6[i+1]==val)
					cont3++;
				if(colum5[i+2]==val)
					cont3++;
				if(colum4[i+3]==val)
					cont3++;
				if(cont3==3)
				{
					if(val==1)
					{
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i+1],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i+2],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i+3],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);
					if(gano==false)
					{	
					JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
					punt1++;
					}
					}
					if(val==2)
					{
						
						iniciarmarco();
						marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
						marcos[2].setBounds(coordx[5][i],coordy[5][i+1],60,60);
						marcos[3].setBounds(coordx[6][i],coordy[6][i+2],60,60);
						marcos[4].setBounds(coordx[7][i],coordy[7][i+3],60,60);
						for(int h=1;h<=4;h++)
							fondo.add(marcos[h]);	
						if(gano==false)
						{	
					JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
					punt2++;
						}
					}
					if(gano==false)
					{
						part++;
					this.hide();
					new Game();
					gano=true;
					}
				}
				
				
			}
			
			int cont4=0;
			if(colum6[i]==val)
				cont4++;
			if(colum5[i]==val)
				cont4++;
			if(colum4[i]==val)
				cont4++;
			if(cont4==3)
			{
				if(val==1)
				{
				iniciarmarco();
				marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
				marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
				marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
				marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
				for(int h=1;h<=4;h++)
					fondo.add(marcos[h]);
				if(gano==false)
				{	
				JOptionPane.showMessageDialog(null, sjug1+" HA GANADO ESTA PARTIDA");
				punt1++;
				}
				
				}
				if(val==2)
				{
					
					iniciarmarco();
					marcos[1].setBounds(coordx[4][i],coordy[4][i],60,60);
					marcos[2].setBounds(coordx[5][i],coordy[5][i],60,60);
					marcos[3].setBounds(coordx[6][i],coordy[6][i],60,60);
					marcos[4].setBounds(coordx[7][i],coordy[7][i],60,60);
					for(int h=1;h<=4;h++)
						fondo.add(marcos[h]);	
					if(gano==false)
					{	
				JOptionPane.showMessageDialog(null, sjug2+" HA GANADO ESTA PARTIDA");	
				punt2++;
					}
				}
				if(gano==false)
				{
					part++;
				this.hide();
				new Game();
				gano=true;
				}
			}
			
		}
		
		
		
		
	}

	public static void main(String[] args) {
		new Game();

	}
	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj=e.getSource();
		
		if(obj==com1 || obj==com2 || obj==com3 || obj==com4 || obj==com5 || obj==com6 || obj==com7)
		{
			contador++;
			if(contador%2==0)
				display(2);
				if(contador%2==1)
					display(1);
		}
		
		if(obj==com1)
		{
			
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum1[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum1[cont]!=0)
				{
					animacion(cont-1,1,valor);
					verificacion(cont-1,1,valor);
					ok=false;
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,1,valor);
					verificacion(cont,1,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
			
			
		}// analiza el primer comando 
		
		if(obj==com2)
		{
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum2[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum2[cont]!=0)
				{
					animacion(cont-1,2,valor);
					verificacion(cont-1,2,valor);
					ok=false;
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,2,valor);
					verificacion(cont,2,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
		}
		
		
		if(obj==com3)
		{
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum3[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum3[cont]!=0)
				{
					animacion(cont-1,3,valor);
					verificacion(cont-1,3,valor);
					ok=false;
					
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,3,valor);
					verificacion(cont,3,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
			
		}
		
		if(obj==com4)
		{
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum4[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum4[cont]!=0)
				{
					animacion(cont-1,4,valor);
					verificacion(cont-1,4,valor);
					ok=false;
					
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,4,valor);
					verificacion(cont,4,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
			
		}
		
		if(obj==com5)
		{
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum5[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum5[cont]!=0)
				{
					animacion(cont-1,5,valor);
					verificacion(cont-1,5,valor);
					ok=false;
					
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,5,valor);
					verificacion(cont,5,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
		}
		
		if(obj==com6)
		{
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum6[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum6[cont]!=0)
				{
					animacion(cont-1,6,valor);
					verificacion(cont-1,6,valor);
					ok=false;
					
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,6,valor);
					verificacion(cont,6,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
		}
		
		if(obj==com7)
		{
			if(contador%2==0)
			{
				valor=2;
			}
			if(contador%2==1)
			{
				valor=1;
			}
			if(colum7[1]==0)// si el primer espacio esta vacio 
			{
			int cont=2;
			boolean ok=true;
			while(ok==true)
			{
				if(colum7[cont]!=0)
				{
					animacion(cont-1,7,valor);
					verificacion(cont-1,7,valor);
					ok=false;
					
				}
				if(cont==6 && ok==true)
				{
					animacion(cont,7,valor);
					verificacion(cont,7,valor);
					ok=false;
				}
				cont++;
				
			}
			
			}
		}
		
		if(obj==salir)
		{
			System.exit(0);
		}
		if(obj==nuevo)
		{
			punt1=0;
			punt2=0;
			part=1;
			this.hide();
			new Menu();
		}
		
	}

}
